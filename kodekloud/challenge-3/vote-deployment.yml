########################### NAMESPACES ################################
#######################################################################
---
apiVersion: v1
kind: Namespace
metadata:
  name: vote
########################### SERVICES ################################
#####################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: vote-service
  namespace: vote
spec:
  ports:
  - nodePort: 31000
    name: vote-service
    port: 5000
    targetPort: 80
  selector:
    app: vote
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: vote
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  selector:
    app: redis
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: vote
spec:
  ports:
  - name: vote-service
    port: 5432
    targetPort: 5432
  selector:
    app: db
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: result-service
  namespace: vote
spec:
  ports:
  - nodePort: 31001
    name: result-service
    port: 5001
    targetPort: 80
  selector:
    app: result
  type: NodePort

########################### DEPLOYMENTS ################################
########################################################################
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  namespace: vote
  labels:
    app: vote
spec:
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      containers:
      - name: vote 
        image: kodekloud/examplevotingapp_vote:before
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 512Mi
            cpu: "1"      

--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: vote
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:alpine
        name: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 512Mi
            cpu: "1"   
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        emptyDir: {}
      
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: vote
  labels:
    app: worker
spec:
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - image: kodekloud/examplevotingapp_worker
        name: worker
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 512Mi
            cpu: "1"   

--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment
  namespace: vote
  labels:
    app: result
spec:
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
      - image: kodekloud/examplevotingapp_result:before
        name: result
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 512Mi
            cpu: "1"   
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: vote
  labels:
    app: db
spec:
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - image: postgres:9.4
        name: db
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 512Mi
            cpu: "1"   
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      volumes:
      - name: db-data
        emptyDir: {}

############################################################################
      


